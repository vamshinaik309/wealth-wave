# Cognito Details
COGNITO_USER_POOL_ID = 'us-east-1_92fhsj2cM'
COGNITO_APP_CLIENT_ID = '33d5l6ooqfg4jnrohkv7r60sm9'
COGNITO_REGION = 'us-east-1'
COGNITO_DOMAIN = 'https://wealth-wave.auth.us-east-1.amazoncognito.com'
REDIRECT_URI = 'http://localhost:5000/home'  # Callback URL after login

# Initialize Cognito client
cognito_client = boto3.client('cognito-idp', region_name=COGNITO_REGION)



<!DOCTYPE html>
{% extends 'base.html' %}

{% block title %}Analytics{% endblock %}

{% block content %}
    <h1> Analytic page content</h1>
    <h3>Your UserID  is  {{ user_id }}</h3>
    <h2>{{api_data}}</h2>
{% endblock %}


-------------------------------------------------
userfulldetails lambda

{
    "body": "{\"user_id\": \"3698229b-6393-4ef1-98b6-344602994745\"}"
}
  
https://qqhx04wws7.execute-api.us-east-1.amazonaws.com/stage1/home/UserFullDetailsApi

import boto3
from boto3.dynamodb.conditions import Key
import json

def lambda_handler(event, context):
    print(event)
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('UserBills')  # Your DynamoDB table name

    # Parse incoming data
    data = json.loads(event['body'])
    user_id = data['user_id']

    # Query DynamoDB to get the last 10 items
    response = table.query(
        KeyConditionExpression=Key('user_id').eq(user_id),
        ScanIndexForward=False,  # Set to False for descending order (assuming timestamp is used for sorting)
        # IndexName='your_index_name'  # Optional: If you're using a global secondary index
    )

    # Extract last 10 items
    last_10_items = response.get('Items', [])

    # Prepare the response
    response_body = {
        'statusCode': 200,
        'body': json.dumps(last_10_items)
    }

    return response_body
  
    --------------------------------------------------------------resolved below----
    import boto3
from boto3.dynamodb.conditions import Key
import json
from decimal import Decimal

class DecimalEncoder(json.JSONEncoder):
    def default(self, o):
        if isinstance(o, Decimal):
            if o % 1 > 0:
                return float(o)
            else:
                return int(o)
        return super(DecimalEncoder, self).default(o)

def lambda_handler(event, context):
    print(event)
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('UserBills')  # Your DynamoDB table name

    # Parse incoming data
    data = json.loads(event['body'])
    user_id = data['user_id']

    # Query DynamoDB to get the last 10 items
    response = table.query(
        KeyConditionExpression=Key('user_id').eq(user_id),
        ScanIndexForward=False,  # Set to False for descending order (assuming timestamp is used for sorting)
        # IndexName='your_index_name'  # Optional: If you're using a global secondary index
    )

    # Extract last 10 items
    last_10_items = response.get('Items', [])

    # Prepare the response using the custom encoder
    response_body = {
        'statusCode': 200,
        'body': json.dumps(last_10_items, cls=DecimalEncoder)
    }

    return response_body
------------------------------------------------------------
import boto3
from boto3.dynamodb.conditions import Key
import json

def lambda_handler(event, context):
    print(event)
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('UserBills')  # Your DynamoDB table name

    # Parse incoming data
    data = json.loads(event['body'])
    user_id = data['user_id']

    # Query DynamoDB to get the last 10 items
    response = table.query(
        KeyConditionExpression=Key('user_id').eq(user_id),
        Limit=10,
        ScanIndexForward=False,  # Set to False for descending order (assuming timestamp is used for sorting)
        # IndexName='your_index_name'  # Optional: If you're using a global secondary index
    )

    # Extract last 10 items
    last_10_items = response.get('Items', [])

    # Prepare the response
    response_body = {
        'statusCode': 200,
        'body': json.dumps(last_10_items)
    }

    return response_body


    ---------------------------------------------------


    body_data = json.loads(api_data.get('body', '[]'))
            print(body_data)

[{'date': '2023-12-01', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '11', 'timestamp': '2023-12-11T03:16:39.330676', 'category': 'groceries/food', 'uploadedFileKey': ''}, {'date': '2023-12-01', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '11', 'timestamp': '2023-12-11T03:16:38.735309', 'category': 'groceries/food', 'uploadedFileKey': ''}, {'date': '2023-12-05', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '10', 'timestamp': '2023-12-11T03:02:57.649260', 'category': 'groceries/food', 'uploadedFileKey': ''}, {'category': 'groceries/food', 'date': '2022-06-22', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': 76, 'timestamp': '2023-12-10T04:51:59.362731'}, {'date': '2023-11-16', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '16', 'timestamp': '2023-12-06T17:56:51.181072', 'category': 'groceries/food', 'uploadedFileKey': ''}, {'date': '2023-11-15', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '15', 'timestamp': '2023-12-06T17:56:30.900649', 'category': 'education', 'uploadedFileKey': ''}, {'date': '2023-11-14', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '14', 'timestamp': '2023-12-06T17:56:15.263253', 'category': 'travel', 'uploadedFileKey': ''}, {'date': '2023-11-04', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '22', 'timestamp': '2023-12-06T17:55:54.600829', 'category': 'healthcare', 'uploadedFileKey': ''}, {'date': '2023-11-02', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '2', 'timestamp': '2023-12-06T17:55:39.980943', 'category': 'clothing', 'uploadedFileKey': ''}, {'date': '2023-11-16', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '12', 'timestamp': '2023-12-06T17:55:10.321389', 'category': 'transportation', 'uploadedFileKey': ''}, {'date': '2022-06-09', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '1', 'timestamp': '2023-12-06T17:54:47.460759', 'category': 'groceries/food', 'uploadedFileKey': ''}, {'date': '2022-08-30', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '69.69', 'timestamp': '2023-12-06T06:44:15.075589', 'category': 'entertainment', 'uploadedFileKey': 'uploads/3698229b-6393-4ef1-98b6-344602994745/20231206_064400_7acc1be473514a0eaabd83781fcbff6f.png'}, {'date': '2023-10-04', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '30', 'timestamp': '2023-12-06T06:09:44.372488', 'category': 'utilities', 'uploadedFileKey': ''}, {'date': '2023-11-26', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '20', 'timestamp': '2023-12-06T06:08:32.693310', 'category': 'dining', 'uploadedFileKey': ''}, {'date': '2023-12-05', 'user_id': '3698229b-6393-4ef1-98b6-344602994745', 'totalAmount': '10', 'timestamp': '2023-12-06T06:08:00.531567', 'category': 'groceries/food', 'uploadedFileKey': ''}]



